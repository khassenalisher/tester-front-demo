{"version":3,"sources":["static/img/arrow-image.svg","static/img/company-logo.svg","store/questionsResults/reducer.ts","store/questionsResults/types.ts","store/auth/reducer.ts","store/auth/types.ts","store/rootReducer.ts","store/index.tsx","serviceWorker.js","components/Header/index.tsx","store/questionsResults/actions.ts","static/img/favourite-img.tsx","components/Card/index.tsx","components/CountdownTimer/index.tsx","components/ResultCard/index.tsx","mock.ts","components/quiz.tsx","store/auth/actions.ts","components/Auth/index.tsx","components/NewTestCard/index.tsx","components/PassedTestCard/index.tsx","components/Dashboard/index.tsx","App.tsx","index.js"],"names":["module","exports","questionReducer","combineReducers","results","state","action","type","console","log","a","map","item","id","result","question","answersWithResult","isAnswered","isFavorite","timeInString","time","authReducer","userAuth","data","rootReducer","store","createStore","reducer","Boolean","window","location","hostname","match","Header","props","className","alt","src","CompanyLogo","isUserAuth","setResults","setTimeInString","changeResult","FavouriteImage","width","height","viewBox","fill","xmlns","cx","cy","r","isFavourite","stroke","d","Card","onCheckboxChange","event","cntAllAnsweredQuestions","target","name","checked","setState","onButtonClicked","direction","onCardNextButtonClick","onFavoriteButtonHandle","answers","bind","this","push","status","prevProps","isTheLast","isTheFirst","onClick","index","key","length","value","onChange","disabled","e","ArrowImage","React","connect","dispatch","bindActionCreators","setResultsAction","timerHandling","CountdownTimer","_isMounted","secondsRemaining","seconds","minutes","tick","intMinutes","Math","floor","intSeconds","toString","timeEnd","clearInterval","startCountDown","setTime","setInterval","setTimeAction","ResultCard","title","rightAnswers","totalQuestions","remainingTime","date","test1","test2","tests","ifPassed","questionsWithAnswers","numberOfQuestions","createDate","passedDate","undefined","resultInNumber","resultInPercent","tests2","Quiz","handleChildNextButtonClick","stepper","updateWindowWidth","windowWidth","innerWidth","handleTimerEnding","isTestFinished","isTimeEnd","newResults","countRightAnswers","isShowModal","list","isAnsweredAllQuestions","isTestFinishedButtonPressed","isEndButtonPressed","addEventListener","callback","i","answersLength","cnt","j","pathname","split","test","find","element","sort","random","forEach","newObject","showResult","document","body","style","overflow","to","onCancelButtonPressed","onIndexQuestionClick","onFinishButtonClick","withRouter","setUserAuth","Auth","onInputChange","username","password","localStorage","setItem","htmlFor","placeholder","mask","maskChar","onSubmitButtonClick","userAuthActions","NewTestCard","PassedTestCard","Dashboard","useEffect","getItem","from","exact","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5bbbc39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-image.5267aa23.svg\";","module.exports = __webpack_public_path__ + \"static/media/company-logo.08e3601c.svg\";","import { combineReducers } from 'redux';\nimport { IQuizItemResult } from '../../types';\nimport { CHANGE_RESULT, RESULTS, SET_TIME } from './types';\n\nconst results = (state = [], action: any): IQuizItemResult[] | null => {\n  if (action.type === RESULTS) {\n    console.log('action', action);\n    return [...action.results];\n  }\n  if (action.type === CHANGE_RESULT) {\n    console.log('I am here', action);\n      const a =  state.map((item:IQuizItemResult) => {\n        if (item.id === action.result.id) {\n            item.id = action.result.id;\n            item.question = action.result.question;\n            item.answersWithResult = action.result.answersWithResult;\n            item.isAnswered = action.result.isAnswered;\n            item.isFavorite = action.result.isFavorite;\n            return item;\n        }\n        return item;\n      });\n      return a;\n  }\n  return state;\n};\n\nconst timeInString = (state = '00:00', action: any): string => {\n  if (action.type === SET_TIME) {\n    return action.time;\n  }\n  return state;\n}\n\nconst questionReducer = combineReducers({\n  results,\n  timeInString,\n});\n\nexport default questionReducer;\n","export const RESULTS = 'RESULTS';\nexport const SET_TIME = 'SET_TIME';\nexport const CHANGE_RESULT = 'CHANGE_RESULT';\n","import { USER_AUTHENTICATION } from './types';\nimport { combineReducers } from 'redux';\n\nconst userAuth = (state = false, action: any): boolean => {\n  if (action.type === USER_AUTHENTICATION) {\n    return action.data;\n  }\n  return state;\n};\n\n\nconst authReducer = combineReducers({\n  userAuth,\n});\nexport default authReducer\n","export const USER_AUTHENTICATION = 'USER_AUTHENTICATION';\n","import { combineReducers } from 'redux';\n\nimport questionReducer from './questionsResults/reducer';\nimport authReducer from './auth/reducer';\n\nconst rootReducer = combineReducers( {\n  questionReducer,\n  authReducer\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport reducer from './rootReducer';\n\nexport const store = createStore(reducer);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport CompanyLogo from '../../static/img/company-logo.svg';\nimport { HeaderTypes } from './types';\nimport './index.css';\n\nfunction Header(props: HeaderTypes.IProps) {\n  return (\n    <div className=\"header\">\n      <div className=\"header__content\">\n        <div className=\"header__company-data\">\n          <div className=\"company-data__logo-wrapper\">\n            <img\n              alt=\"company logo\"\n              className=\"company-data__logo\"\n              src={CompanyLogo}\n            />\n          </div>\n          <h3 className=\"company-data__title\">Комитет индустриального развития и промышленной безопасности </h3>\n        </div>\n        {props.isUserAuth && (\n          <div className=\"header__user-data\">\n            <h3 className=\"user-data__name\">Кожатаев Б.Б.</h3>\n            <p className=\"user-data__iin\">ИИН: 888888888888</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import { IQuizItemResult } from '../../types';\nimport { RESULTS, SET_TIME, CHANGE_RESULT } from './types';\n\nexport const setResults = (data: IQuizItemResult[]) => ({\n  type: RESULTS,\n  results: data,\n});\nexport const setTimeInString= (data: string) => ({\n  type: SET_TIME,\n  time: data,\n});\nexport const changeResult = (data: IQuizItemResult) => ({\n  type: CHANGE_RESULT,\n  result: data,\n});\n\nexport default {\n  setResults,\n  setTimeInString,\n  changeResult,\n}\n","import * as React from 'react';\n\nexport interface IProps {\n  isFavourite: boolean;\n}\n\nfunction FavouriteImage(props: IProps) {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"12\" cy=\"12\" r=\"11.5\" fill={`${props.isFavourite ? \"#E9C132\" : '#FFF'}`} stroke=\"#E8E8E8\"/>\n      <path d=\"M13.6 7.99999L13.3333 6.66666H7.33333V18H8.66666V13.3333H12.4L12.6667 14.6667H17.3333V7.99999H13.6Z\" fill={`${props.isFavourite ? \"#FFF\" : '#E9C132'} `}/>\n    </svg>\n  );\n}\n\nexport default FavouriteImage;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport setResultsAction from '../../store/questionsResults/actions';\nimport ArrowImage from '../../static/img/arrow-image.svg';\nimport { CardTypes } from './types';\nimport { IQuizItemResult, IResult } from '../../types';\nimport './index.css';\nimport FavouriteImage from '../../static/img/favourite-img';\n\nclass Card extends React.Component<CardTypes.IProps, CardTypes.IState> {\n  constructor(props: CardTypes.IProps) {\n    super(props);\n    this.state = {\n      result: {\n        id: this.props.id,\n        question: this.props.question,\n        answersWithResult: [...this.props.answers]\n      },\n    };\n    this.onCheckboxChange = this.onCheckboxChange.bind(this);\n  }\n  componentDidMount() {\n    const data:IResult[] = [];\n    console.log('this.props.answers', this.props.answers);\n    this.props.answers.map(item => {\n      data.push({\n        status: item.status,\n        data: item.data,\n        checked: false,\n      })\n    });\n\n    const result:IQuizItemResult | null = {\n      id: this.props.id,\n      question: this.props.question,\n      answersWithResult: [...data],\n      isAnswered: false,\n    }\n    this.setState({result});\n  }\n\n  componentDidUpdate(prevProps: any) {\n    if(prevProps.answers !== this.props.answers) {\n      // const data:IResult[] = [];\n      // this.props.answers.map(item => {\n      //   data.push({\n      //     status: item.status,\n      //     data: item.data,\n      //     checked: false,\n      //   })\n      // });\n      //\n      if(this.props.results) {\n\n        const result:IQuizItemResult | null = {\n          id: this.props.id,\n          question: this.props.question,\n          answersWithResult: [...this.props.answers],\n          isAnswered: false,\n        }\n        if(result ) this.setState({result });\n      }\n    }\n  }\n  onCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { result } = this.state;\n    const { results } = this.props || [];\n    console.log('what is result', result);\n    let cntAllAnsweredQuestions = 0;\n    result.answersWithResult.map(item => {\n      if(item.data === event.target.name) {\n        item.checked = event.target.checked;\n      }\n      if(item.checked) cntAllAnsweredQuestions++;\n    });\n    result.isAnswered = cntAllAnsweredQuestions > 0;\n    this.props.changeResult && this.props.changeResult(result);\n    this.setState({result}, () => {\n      if(!results) return;\n    });\n  };\n\n  onButtonClicked = (event: React.MouseEvent<HTMLButtonElement>) => (direction: string) => {\n    this.props.onCardNextButtonClick && this.props.onCardNextButtonClick(direction);\n  };\n\n  onFavoriteButtonHandle = () => {\n    const { result } = this.state;\n    result.isFavorite = !result.isFavorite;\n    this.setState({result})\n    this.props.changeResult && this.props.changeResult(result);\n  };\n\n  componentWillUnmount() {\n  }\n  render(): React.ReactElement {\n    const { question, id, isTheLast, isTheFirst, answers } = this.props;\n    const { result } = this.state;\n    return (\n      <div className=\"card\">\n        <div className=\"card__content\">\n          <div className=\"card__head-wrapper\">\n            <h3 className=\"card__title card__title--number\">#{id+1}</h3>\n            <div className=\"card__favorites\">\n              <button\n                className=\"card__favorites-button\"\n                onClick={() => this.onFavoriteButtonHandle()}\n              >\n                <FavouriteImage isFavourite={result.isFavorite || false}/>\n              </button>\n            </div>\n          </div>\n          <h3 className=\"card__title card__title--question\">{question}</h3>\n          <div className=\"card__questions\">\n            {result.answersWithResult && result.answersWithResult.map((item: IResult, index) => (\n              <div className={`questions__item ${item.checked && 'questions__item--checked'}`} key={`question_${index}`}>\n                <label className=\"container\">\n                  <p className={`questions__text ${result.answersWithResult.length-1 !== index && 'questions__text--border'}`}>{item.data}</p>\n                  <input\n                    type=\"checkbox\"\n                    name={item.data}\n                    value={item.data}\n                    onChange={this.onCheckboxChange}\n                  />\n                  <span className=\"checkmark\" />\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"card__bottom\">\n          <button\n            disabled={isTheFirst}\n            className={`card__button ${isTheFirst && 'card__button--disabled'}`}\n            onClick={e => this.onButtonClicked(e)('prev')}\n          >\n            <img\n              className=\"arrow arrow-prev\"\n              alt=\"arrow next\"\n              src={ArrowImage}\n            />\n            Предыдущий вопрос\n          </button>\n          <button\n            disabled={isTheLast}\n            className={`card__button ${isTheLast && 'card__button--disabled'}`}\n            onClick={e => this.onButtonClicked(e)('next')}\n          >\n              Следующий вопрос\n            <img\n              className=\"arrow arrow-next\"\n              alt=\"arrow next\"\n              src={ArrowImage}\n            />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state: any) => {\n  return ({results: state.questionReducer.results});\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({\n    setResults: setResultsAction.setResults,\n    changeResult: setResultsAction.changeResult,\n  }, dispatch);\n};\n\nexport default connect<any, any>(mapStateToProps, mapDispatchToProps)(Card);\n","import * as React from 'react';\nimport { CountdownTimerTypes } from './types';\nimport './index.css';\nimport { bindActionCreators } from 'redux';\nimport setTimeAction from '../../store/questionsResults/actions';\nimport { connect } from 'react-redux';\n\nlet timerHandling: any = null;\n\nclass CountdownTimer extends React.Component<CountdownTimerTypes.IProps, CountdownTimerTypes.IState> {\n  _isMounted = false;\n  constructor(props: CountdownTimerTypes.IProps) {\n    super(props);\n    this.state = {\n      secondsRemaining: props.value,\n      seconds: '00',\n      minutes: '00',\n    };\n    this.tick = this.tick.bind(this);\n  }\n\n  public tick() {\n    if(!this._isMounted) return;\n    let { secondsRemaining } = this.state;\n    const intMinutes = Math.floor(secondsRemaining / 60);\n    const intSeconds = (secondsRemaining - (intMinutes * 60));\n    const minutes = (intMinutes < 10 ? `0${intMinutes}` : intMinutes).toString();\n    const seconds = (intSeconds < 10 ? `0${intSeconds}` : intSeconds).toString();\n    secondsRemaining -= 1;\n    this.setState({ minutes, seconds, secondsRemaining });\n    if (intSeconds === 0 && intMinutes === 0) {\n      this.props.timeEnd && this.props.timeEnd();\n      clearInterval(timerHandling);\n    }\n  }\n\n  componentDidMount(): void {\n    this._isMounted = true;\n    this.startCountDown();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.props.setTime && this.props.setTime(`${this.state.minutes}:${this.state.seconds}`);\n  }\n  startCountDown() {\n    timerHandling = setInterval(this.tick, 1000);\n  }\n\n  public render(): JSX.Element {\n    const { minutes, seconds } = this.state;\n    return (\n      <div className=\"countdown-timer\">\n        <h5 className=\"countdown-timer__title\">Осталось времени</h5>\n        <p className=\"countdown-timer__text\">{minutes}:{seconds}</p>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({\n    setTime: setTimeAction.setTimeInString,\n  }, dispatch);\n};\n\nexport default connect<any, any>(null, mapDispatchToProps)(CountdownTimer);\n","import * as React from 'react';\nimport { ResultCardTypes } from './types';\nimport './index.css';\n\nfunction ResultCard(props: ResultCardTypes.IProps) {\n  return (\n    <div className=\"result-card\">\n      <h3 className=\"result-card__title\">{props.title}</h3>\n      <div className=\"result-card__content\">\n        <div className=\"result-card__block result-card__block--result\">\n          <p className=\"result-card__text\">Результат:</p>\n          <div className=\"result-card__block\">\n            <p className=\"result-card__right-answers\">\n              {props.rightAnswers}\n              <span className=\"result-card__total-questions\">/{props.totalQuestions}</span>\n            </p>\n            <p className=\"result-card__status\">\n              {props.status}\n            </p>\n          </div>\n        </div>\n        <div className=\"result-card__block result-card__block--time\">\n          <p className=\"result-card__text\">Времени осталось:</p>\n          <p className=\"result-card__data\">{props.remainingTime}</p>\n        </div>\n        <div className=\"result-card__block\">\n          <p className=\"result-card__text\">Дата сдачи:</p>\n          <p className=\"result-card__data\">{props.date}</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ResultCard;\n","import { IQuizItem, ITest } from './types';\n\nexport const test1:IQuizItem[] = [\n  {\n    id: 0,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 1,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 2,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 3,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 4,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 5,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n  {\n    id: 6,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 7,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 8,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 9,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 10,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 11,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n  {\n    id: 12,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 13,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 14,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 15,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 16,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 17,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n  {\n    id: 18,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 19,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 20,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 21,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 22,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 23,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n  {\n    id: 24,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 25,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 26,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 27,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 28,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 29,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n  {\n    id: 30,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 31,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 32,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 33,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 34,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 35,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n  {\n    id: 36,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 37,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 38,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 39,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 40,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 41,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n  {\n    id: 42,\n    question: 'Как называется водная оболочка земли?',\n    answers: [\n      {\n        status: false,\n        data: 'Литосфера',\n      },\n      {\n        status: true,\n        data: 'Гидросфера',\n      },\n      {\n        status: false,\n        data: 'Биосфера'\n      },\n      {\n        status: false,\n        data: 'Атмосфера'\n      }\n    ]\n  },\n  {\n    id: 43,\n    question: 'Какую птицу называют лесным доктором?',\n    answers: [\n      {\n        status: true,\n        data: 'Дятел',\n      },\n      {\n        status: false,\n        data: 'Кукушка',\n      },\n      {\n        status: false,\n        data: 'Птица-Доктор'\n      },\n      {\n        status: false,\n        data: 'Сорока'\n      }\n    ]\n  },\n  {\n    id: 44,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 45,\n    question: 'Откуда пошло выражение «деньги не пахнут?',\n    answers: [\n      {\n        status: false,\n        data: 'От подателей за провоз парфюмерии',\n      },\n      {\n        status: false,\n        data: 'От сборов за нестиранные носки',\n      },\n      {\n        status: true,\n        data: 'От налога на туалеты'\n      },\n      {\n        status: false,\n        data: 'От налогов на землю'\n      }\n    ]\n  },\n  {\n    id: 46,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 47,\n    question: 'Туристы, приезжающие на Майорку, обязаны заплатить налог?',\n    answers: [\n      {\n        status: true,\n        data: 'На солнце',\n      },\n      {\n        status: false,\n        data: 'На майку',\n      },\n      {\n        status: false,\n        data: 'На трусы'\n      },\n      {\n        status: false,\n        data: 'На шорты'\n      }\n    ]\n  },\n];\n\nexport const test2:IQuizItem[] = [\n  {\n    id: 0,\n    question: 'Кто из президентов США написал свой собственный рассказ про Шерлока Холмса?',\n    answers: [\n      {\n        status: false,\n        data: 'Джон Кеннеди'\n      },\n      {\n        status: false,\n        data: 'Рональд Рейган',\n      },\n      {\n        status: true,\n        data: 'Франклин Рузвельт'\n      },\n      {\n        status: false,\n        data: 'Барака Обама'\n      }\n    ]\n  },\n  {\n    id: 1,\n    question: 'Какую пошлину ввели в XII  веке в Англии для того чтобы заставить мужчин пойти на войну?',\n    answers: [\n      {\n        status: false,\n        data: 'Налог на тунеядство',\n      },\n      {\n        status: true,\n        data: 'Налог на трусость',\n      },\n      {\n        status: false,\n        data: 'Налог на отсутствие сапог'\n      },\n      {\n        status: false,\n        data: 'Налог на оружие'\n      }\n    ]\n  },\n  {\n    id: 2,\n    question: 'Выберите самый длинный техт?',\n    answers: [\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение',\n      },\n      {\n        status: true,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение. Проверка на переполнение'\n      },\n      {\n        status: false,\n        data: 'Проверка на переполнение. Проверка на переполнение. Проверка на переполнение.aloha'\n      }\n    ]\n  },\n  {\n    id: 3,\n    question: 'Российский мультфильм, удостоенный «Оскара», — это…',\n    answers: [\n      {\n        status: false,\n        data: '«Простоквашино»',\n      },\n      {\n        status: false,\n        data: '«Винни-Пух»',\n      },\n      {\n        status: true,\n        data: ' «Старик и море»'\n      },\n      {\n        status: false,\n        data: '«Ну, погоди!»'\n      }\n    ]\n  },\n  {\n    id: 4,\n    question: '2+2*2?',\n    answers: [\n      {\n        status: true,\n        data: 'Шесть',\n      },\n      {\n        status: false,\n        data: '8',\n      },\n      {\n        status: true,\n        data: '6'\n      },\n      {\n        status: false,\n        data: '10'\n      }\n    ]\n  },\n  {\n    id: 5,\n    question: 'Что в Российской империи было вещевым эквивалентом денег?',\n    answers: [\n      {\n        status: true,\n        data: 'Шкуры пушных зверей',\n      },\n      {\n        status: false,\n        data: 'Крупный рогатый скот',\n      },\n      {\n        status: false,\n        data: 'Табак'\n      },\n      {\n        status: false,\n        data: 'Женские серьги'\n      }\n    ]\n  },\n  {\n    id: 6,\n    question: 'У индейцев из немногочисленного североамериканского племени квакиутл есть традиция: беря деньги в долг, они оставляют в залог…',\n    answers: [\n      {\n        status: false,\n        data: 'Душу',\n      },\n      {\n        status: true,\n        data: 'Имя',\n      },\n      {\n        status: false,\n        data: 'Скальп тещи'\n      },\n      {\n        status: false,\n        data: 'Амулет'\n      }\n    ]\n  }\n];\n\nexport const tests:ITest[] = [\n  {\n    id: 0,\n    ifPassed: false,\n    title: \"Тема теста, например “Ежемесячное тестирование юр. отдела 2018/2019\",\n    questionsWithAnswers: [...test1],\n    numberOfQuestions: test1.length,\n    createDate: '20/01/20',\n    passedDate: undefined,\n    resultInNumber: undefined,\n    resultInPercent: undefined,\n  },\n  {\n    id: 1,\n    ifPassed: false,\n    createDate: '11/10/19',\n    title: \"Второй тест, например “Ежемесячное тестирование юр. отдела 2018/2019\",\n    questionsWithAnswers: [...test2],\n    numberOfQuestions: test2.length,\n    passedDate: undefined,\n    resultInNumber: undefined,\n    resultInPercent: undefined,\n  },\n  {\n    id: 2,\n    ifPassed: false,\n    createDate: '11/10/19',\n    title: \"Второй тест, например “Ежемесячное тестирование юр. отдела 2018/2019\",\n    questionsWithAnswers: [...test2],\n    numberOfQuestions: test2.length,\n    passedDate: undefined,\n    resultInNumber: undefined,\n    resultInPercent: undefined,\n  }\n];\n\nexport const tests2:ITest[] = [\n  {\n    id: 0,\n    ifPassed: false,\n    title: \"Тема теста, например “Ежемесячное тестирование юр. отдела 2018/2019\",\n    questionsWithAnswers: [...test1],\n    numberOfQuestions: test1.length,\n    createDate: '20/01/20',\n    passedDate: '20/01/20',\n    resultInNumber: 69,\n    resultInPercent: 87,\n  },\n  {\n    id: 1,\n    ifPassed: false,\n    createDate: '11/10/19',\n    title: \"Второй тест, например “Ежемесячное тестирование юр. отдела 2018/2019\",\n    questionsWithAnswers: [...test2],\n    numberOfQuestions: test2.length,\n    passedDate: '11/10/19',\n    resultInNumber: 48,\n    resultInPercent: 89,\n  },\n  {\n    id: 2,\n    ifPassed: false,\n    createDate: '11/10/19',\n    title: \"Второй тест, например “Ежемесячное тестирование юр. отдела 2018/2019\",\n    questionsWithAnswers: [...test2],\n    numberOfQuestions: test2.length,\n    passedDate: '11/10/19',\n    resultInNumber: 23,\n    resultInPercent: 100,\n  }\n];\n\n\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport Card from './Card/index';\nimport CountdownTimer from './CountdownTimer';\nimport { QuizTypes, IQuizItemResult, IResult } from '../types';\nimport ResultCard from '../components/ResultCard';\nimport { withRouter } from 'react-router-dom';\nimport './index.css';\nimport { tests } from '../mock';\nimport { bindActionCreators } from 'redux';\nimport setResultsAction from '../store/questionsResults/actions';\n\nclass Quiz extends React.Component<QuizTypes.IProps, QuizTypes.IState> {\n  constructor(props: QuizTypes.IProps) {\n    super(props);\n    this.state = {\n      list: [],\n      stepper: 0,\n      results: [],\n      rightAnswers: 0,\n      isTimeEnd: false,\n      isAnsweredAllQuestions: false,\n      isShowModal: false,\n      isTestFinished: false,\n      isTestFinishedButtonPressed: false,\n      isEndButtonPressed: false,\n      cntAllAnsweredQuestions: 0,\n      windowWidth: 0,\n    };\n    window.addEventListener('resize', this.updateWindowWidth);\n  }\n  handleChildNextButtonClick = (direction: string) => {\n    const { stepper } = this.state;\n    if(direction === 'next') this.setState({stepper: stepper + 1});\n    else this.setState({stepper: stepper - 1});\n  };\n\n  updateWindowWidth = () => {\n    this.setState({windowWidth: window.innerWidth})\n  };\n\n  handleTimerEnding = () => {\n    if(this.state.isTestFinished) return;\n    this.setState({isTimeEnd: true}, () => {\n      if(this.props.newResults) this.countRightAnswers(this.props.newResults);\n      this.setState({isShowModal: true});\n    });\n  };\n\n  countRightAnswers(results: IQuizItemResult[], callback?: any) {\n    const length = results.length;\n\n    let rightAnswers = 0;\n    let cntAllAnsweredQuestions = 0;\n    console.log('res', results);\n    for(let i = 0; i < length; i++) {\n      const answersWithResult = results[i].answersWithResult;\n      const answersLength = answersWithResult.length;\n      let cnt = 0;\n      for(let j = 0; j < answersLength; j++) {\n        if(answersWithResult[j].checked === answersWithResult[j].status) cnt++;\n      }\n      for(let j = 0; j < answersLength; j++) {\n        if(answersWithResult[j].checked) {\n          cntAllAnsweredQuestions++;\n          break;\n        }\n      }\n      if(cnt ===  answersLength) rightAnswers++;\n    }\n    console.log('cntAllAnsweredQuestions', cntAllAnsweredQuestions);\n    this.setState({\n      isAnsweredAllQuestions: cntAllAnsweredQuestions === this.state.list.length,\n      rightAnswers,\n      cntAllAnsweredQuestions,\n    }, () => callback && callback());\n  }\n  onIndexQuestionClick(index: number) {\n    if(index < 0 || index > this.state.list.length) return;\n    this.setState({stepper: index});\n  }\n  onFinishButtonClick() {\n    if(!this.props.newResults) return;\n    console.log('this.props.newResults i am here', this.props.newResults);\n    const { newResults } = this.props;\n    this.setState({isTestFinishedButtonPressed: true});\n    this.countRightAnswers(newResults, () => {\n      // this.setState({isShowModal: true});\n    });\n  }\n  onCancelButtonPressed() {\n    this.setState({isTestFinishedButtonPressed: false})\n  }\n  componentDidMount(): void {\n    this.updateWindowWidth();\n    const id = this.props.location.pathname.split('/')[3];\n    const test = tests.find(element => element.id.toString() === id);\n    console.log('testmotherfucker', test);\n    const list = test && test.questionsWithAnswers.sort( () => Math.random() - 0.5);\n    console.log('aloha dance', list);\n    let results: IQuizItemResult[] = [];\n    if(list) this.setState({list},() => {\n      this.state.list.map((item, index) => {\n        const data:IResult[] = [];\n        item.answers.forEach(item => {\n          data.push({\n            status: item.status,\n            data: item.data,\n            checked: false,\n          })\n        });\n        const newObject = {\n          id: item.id,\n          question: item.question,\n          answersWithResult: [...data],\n          isAnswered: false,\n          isFavorite: false,\n        };\n        results.push(newObject);\n      })\n      console.log('results', results);\n      this.props.setResults && this.props.setResults(results);\n    });\n  }\n\n  render():React.ReactElement {\n    const { stepper, isTimeEnd, rightAnswers, windowWidth } = this.state;\n    const { length } = this.state.list;\n    const showResult = (this.state.isAnsweredAllQuestions && this.state.isTestFinishedButtonPressed) || this.state.isEndButtonPressed;\n    if((isTimeEnd || (!this.state.isAnsweredAllQuestions && this.state.isTestFinishedButtonPressed))) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'unset';\n    }\n    if(showResult) {\n      document.body.style.overflow = 'unset';\n    }\n    console.log('bachate', this.props);\n    return (\n      <div className={`quiz`}>\n        {showResult ? (\n          <div className=\"quiz__result\">\n            <ResultCard\n              title=\"Тема теста, например “Ежемесячное тестирование юр. отдела 2019/2020”?\"\n              rightAnswers={rightAnswers}\n              totalQuestions={length}\n              status=\"Пройден\"\n              remainingTime={this.props.remainingTime || '00:00'}\n              date=\"20/03/19\"\n            />\n            <div\n              className=\"result__end-button-wrapper\"\n            >\n              <Link className=\"result__end-button\" to={'/tester-front-demo/'}>Вернуться на главную</Link>\n            </div>\n          </div> ) : (\n          <>\n            <div className={`on-top ${(isTimeEnd || (!this.state.isAnsweredAllQuestions && this.state.isTestFinishedButtonPressed)) && 'on-top--block'}`}>\n              <div className=\"modal-form__wrapper\">\n                <div className=\"modal-form\">\n                {this.state.isTimeEnd ? (\n                  <>\n                    <h3 className=\"modal-form__title\">Время на сдачу теста истекло.\n                      Ваши текущие ответы сохранены</h3>\n                    <div className=\"modal-form__button-wrapper--center\" >\n                      <button\n                        className=\"modal-form__button modal-form__button--blue\"\n                        onClick={() => {\n                          this.setState({isEndButtonPressed: true});\n                          document.body.style.overflow = 'unset';\n                        }}\n\n                      >\n                        Выйти\n                      </button>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <h3 className=\"modal-form__title\">{`Вы ответили на ${this.state.cntAllAnsweredQuestions}/${this.state.list.length} вопросов. Вы уверены, что хотите закончить тест?`}</h3>\n                    <div className=\"modal-form__button-wrapper\">\n                      <button\n                        className=\"modal-form__button modal-form__button--black modal-form__button--width-50\"\n                        onClick={() => {\n                          document.body.style.overflow = 'unset';\n                          this.onCancelButtonPressed();}}\n                      >\n                        Отменить\n                      </button>\n                      <button\n                        className=\"modal-form__button modal-form__button--blue modal-form__button--width-50\"\n                        onClick={() => {\n                          document.body.style.overflow = 'unset';\n                          this.setState({isEndButtonPressed: true})\n                        }}\n                      >\n                        Закончить тест\n                      </button>\n                    </div>\n                  </>\n                )}\n              </div>\n              </div>\n            </div>\n            <div className=\"quiz__inner-container\">\n              <div>\n                <div className=\"quiz__title\">Тема теста, например “Ежемесячное тестирование юр. отдела 2019/2020”?</div>\n                <div className=\"quiz__content\">\n                  <div className=\"quiz__list\">\n                    <h6 className=\"list__title\">Вопросы</h6>\n                    <div className=\"list__content\">\n                      {this.props.newResults && this.props.newResults.map((item, index) => (\n                        <>\n                          <button\n                            className={`\n                              list__button ${(index+1) % 5 === 0 && 'list__button--last'}\n                              ${stepper === index ? 'list__button--current' : item.isFavorite ? 'list__button--favorite'\n                              : item.isAnswered ? 'list__button--answered' : '' }\n                            `}\n                            onClick={() => this.onIndexQuestionClick(index)}\n                          >\n                            {index+1}\n                          </button>\n                          {(windowWidth > 850) && ((index+1) % 5 === 0) && <br/>}\n                        </>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"quiz__card\">\n                    {console.log('suka blyat', this.props.newResults)}\n                    {stepper < length  && this.props.newResults && this.props.newResults.map((item, i) =>\n                      <div key={i} className={`quiz__item ${i === stepper ? 'quiz__item--current' : ''}`}>\n                        <Card\n                          id={item.id}\n                          question={item.question}\n                          answers={[...item.answersWithResult]}\n                          onCardNextButtonClick={this.handleChildNextButtonClick}\n                          isTheLast={i === length - 1}\n                          isTheFirst={i === 0}\n                        />\n                      </div>)}\n                  </div>\n                  <div className=\"quiz__countdown-timer\">\n                    <CountdownTimer\n                      value={500}\n                      timeEnd={this.handleTimerEnding}/>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"quiz__end\">\n              <div className=\"end__content\">\n                <button\n                  className=\"end__button\"\n                  onClick={() => this.onFinishButtonClick()}\n                >\n                  Закончить тест\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state: any) => {\n  return ({\n    newResults: state.questionReducer.results,\n    remainingTime: state.questionReducer.timeInString,\n  });\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({\n    setResults: setResultsAction.setResults,\n  }, dispatch);\n};\n\nexport default connect<any, any>(mapStateToProps, mapDispatchToProps)(withRouter(Quiz));\n","import { USER_AUTHENTICATION } from './types';\n\nexport const setUserAuth = (data: boolean) => ({\n  type: USER_AUTHENTICATION,\n  data: data,\n});\n\nexport default {\n  setUserAuth,\n}\n","import * as React from 'react';\nimport { AuthTypes} from './types';\nimport './index.css';\nimport { bindActionCreators } from 'redux';\nimport userAuthActions from '../../store/auth/actions';\nimport InputMask from 'react-input-mask';\nimport { connect } from 'react-redux';\n\nclass Auth extends React.Component<AuthTypes.IProps, AuthTypes.IState> {\n  constructor(props: AuthTypes.IProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    }\n  }\n  onInputChange = (key: string) => (\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const value = event.target.value;\n      if(key === 'username')  this.setState({username: value});\n      else this.setState({password: value});\n    }\n  )\n\n  onSubmitButtonClick() {\n    console.log('pressed');\n    if(this.state.username === '888888888888' && this.state.password === 'password') {\n      console.log('correct');\n      localStorage.setItem('user', 'theusertoken');\n      this.props.setUserAuth && this.props.setUserAuth(true)\n    }\n  };\n\n  public render(): JSX.Element {\n    return (\n      <div className=\"auth\">\n        <div className=\"auth__form\">\n          <h3 className=\"auth__title\">Авторизация</h3>\n          <div className=\"auth__username-block\">\n            <label className=\"username__label\" htmlFor=\"username\">Логин</label>\n            <InputMask placeholder=\"ИНН\" className=\"auth__input\" mask=\"999999999999\" maskChar={null} value={this.state.username} onChange={this.onInputChange('username')} />\n          </div>\n          <div className=\"auth__password-block\">\n            <label className=\"password__label\" htmlFor=\"password\">Пароль</label>\n            <input\n              placeholder='Пароль'\n              className=\"auth__input\"\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              value={this.state.password}\n              onChange={this.onInputChange('password')}\n            />\n          </div>\n          <button\n            className=\"auth__button-enter\"\n            onClick={() => this.onSubmitButtonClick()}\n          >\n            Войти\n          </button>\n          <div className=\"auth__button-help-wrapper\">\n            <button\n              className=\"auth__button-help\"\n            >\n              Забыли пароль?\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return bindActionCreators({\n    setUserAuth: userAuthActions.setUserAuth,\n  }, dispatch);\n};\n\nexport default connect<any, any>(null, mapDispatchToProps)(Auth);\n\n","import * as React from 'react';\nimport { Link } from 'react-router-dom'\nimport { NewTestCardTypes } from './types';\nimport ArrowImage from '../../static/img/arrow-image.svg';\nimport './index.css';\n\nfunction NewTestCard(props: NewTestCardTypes.IProps) {\n  return (\n    <div className=\"new-test-card\">\n      <h3 className=\"new-test-card__title\">{props.title}</h3>\n      <div className=\"new-test-card__block\">\n        <p className=\"new-test-card__create-date\">{props.createDate}</p>\n        <div>\n          <Link\n            className=\"new-test-card__link\"\n            to={`/tester-front-demo/test/${props.id}`}\n          >\n            Пройти тестирование\n            <img alt='arrow' className=\"new-test-card__arrow\" src={ArrowImage} />\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default NewTestCard;\n","import * as React from 'react';\nimport { PassedTestCardTypes } from './types';\nimport { Link } from 'react-router-dom';\nimport './index.css';\nimport ArrowImage from '../../static/img/arrow-image.svg';\n\nfunction PassedTestCard(props: PassedTestCardTypes.IProps) {\n  return (\n    <div className=\"passed-test-card\">\n      <p className=\"passed-test-card__result\">{props.resultInPercent}%</p>\n      <div className=\"passed-test-card__content\">\n        <div>\n          <p className=\"passed-test-card__title\">{props.title}</p>\n          <span className=\"passed-test-card__date\">{props.createDate}</span>\n        </div>\n        <div className=\"passed-test-card__link-wrapper\">\n          <Link\n            className=\"passed-test-card__link\"\n            to={`/tester-front-demo/test/${props.id}`}\n          >\n            Перепройти тестирование\n            <img alt='arrow' className=\"passed-test-card__arrow\" src={ArrowImage} />\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PassedTestCard;\n","import React from 'react';\nimport NewTestCard from '../NewTestCard';\nimport PassedTestCard from '../PassedTestCard';\nimport { tests, tests2 } from '../../mock';\nimport './index.css';\n\n\nfunction Dashboard() {\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard__new-test-cards\">\n        <h3 className=\"new-test-cards__title\">Новые тесты</h3>\n        <div className=\"new-test-cards__block\">\n          {tests.map(item => (\n            <div className=\"new-test-cards__item\">\n              <NewTestCard\n                id={item.id}\n                title={item.title}\n                createDate={item.createDate}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"dashboard_passed-test-cards\">\n        <h3 className=\"passed-test-cards__title\">Прошлые тесты</h3>\n        <div className=\"passed-test-cards__block\">\n          {tests2.map(item => (\n            <div className=\"passed-test-cards__item\">\n              <PassedTestCard\n                id={item.id}\n                title={item.title}\n                createDate={item.createDate}\n                resultInPercent={item.resultInPercent}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport { Route, BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport Quiz from './components/quiz';\nimport Auth from './components/Auth';\nimport Dashboard from './components/Dashboard';\nimport { AppTypes } from './types';\nimport { connect } from 'react-redux';\n\n\nfunction App(props: AppTypes.IPros) {\n  useEffect(() => {\n    console.log(props.userAuth)\n  });\n  const AUTH_TOKEN = localStorage.getItem('user');\n  const userAuth = AUTH_TOKEN === 'theusertoken';\n  return (\n        <Router>\n            <div className=\"app\">\n              <Header isUserAuth={userAuth}/>\n              {userAuth ? (\n                <div>\n                  <Redirect from=\"/tester-front-demo/login\" to=\"/tester-front-demo/\"/>\n                  <Route\n                    exact\n                    path=\"/tester-front-demo/\"\n                    component={() => <Dashboard/>}\n                  />\n                  <Route exact path=\"/tester-front-demo/test/:id\" component={() => <Quiz/>} />\n                </div>\n              ) : (\n                <div>\n                  <Redirect from=\"/\" to=\"/tester-front-demo/login\"/>\n                  <Route path=\"/tester-front-demo/login\" component={() => <Auth/>} />\n                </div>\n              )}\n            </div>\n        </Router>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n  return ({\n    userAuth: state.authReducer.userAuth\n  });\n};\n\nexport default connect<any, any>(mapStateToProps, null)(App);\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store } from './store';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App.tsx';\nimport './index.css';\n\nReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}